{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Sylang Variant Config",
  "patterns": [
    {"include": "#comments"},
    {"include": "#use-statements"},
    {"include": "#header-definition"},
    {"include": "#ref-statements"},
    {"include": "#definitions"},
    {"include": "#properties"},
    {"include": "#strings"},
    {"include": "#identifiers"}
  ],
  "repository": {
    "comments": {
      "patterns": [
        {"name": "comment.line.sylang", "begin": "//", "end": "$"},
        {"name": "comment.block.sylang", "begin": "/\\*", "end": "\\*/"}
      ]
    },
    "use-statements": {
      "patterns": [
        {
          "match": "^\\s*(use)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {"name": "keyword.control.sylang"},
            "2": {"name": "storage.type.sylang"},
            "3": {"name": "entity.name.type.sylang"}
          }
        }
      ]
    },
    "header-definition": {
      "patterns": [
        {
          "match": "^\\s*(hdef)\\s+(configset)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {"name": "keyword.control.sylang"},
            "2": {"name": "storage.type.sylang"},
            "3": {"name": "entity.name.type.sylang"}
          }
        }
      ]
    },
    "ref-statements": {
      "patterns": [
        {
          "match": "^\\s*(\\w+)\\s+(ref)\\s+(\\w+)\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\s*,\\s*[a-zA-Z_][a-zA-Z0-9_]*)*)",
          "captures": {
            "1": {"name": "variable.parameter.sylang"},
            "2": {"name": "keyword.control.sylang"},
            "3": {"name": "storage.type.sylang"},
            "4": {"name": "entity.name.type.sylang"}
          }
        }
      ]
    },
    "definitions": {
      "patterns": [
        {
          "match": "^\\s*(def)\\s+(config)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+([01])\\b",
          "captures": {
            "1": {"name": "keyword.control.sylang"},
            "2": {"name": "storage.type.sylang"},
            "3": {"name": "entity.name.type.sylang"},
            "4": {"name": "constant.numeric.sylang"}
          }
        }
      ]
    },
    "properties": {
      "patterns": [
        {"match": "^\\s*(name|description|owner|tags|generatedfrom|generatedat|requires|excludes|composedof|needs|when)\\b", "captures": {"1": {"name": "variable.parameter.sylang"}}},
        {"match": "^\\s*(generatedfrom|inherits)\\b", "captures": {"1": {"name": "keyword.other.relation.sylang"}}}
      ]
    },
    "strings": {
      "patterns": [
        {"name": "string.quoted.sylang", "begin": "\"", "end": "\"", "patterns": [{"name": "constant.character.escape.sylang", "match": "\\\\."}]}
      ]
    },
    "identifiers": {
      "patterns": [
        {"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b", "name": "variable.other.sylang"}
      ]
    }
  },
  "scopeName": "source.sylang.vcf"
} 